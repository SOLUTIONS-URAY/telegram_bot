from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from . import start
import logging

def register_help_handler(bot):
    @bot.message_handler(commands=['help'])
    def handle_help(message):
        try:
            user_id = message.from_user.id
            
            if hasattr(start, 'user_api') and start.user_api:
                keyboard = InlineKeyboardMarkup()
                #keyboard.add(
              #      InlineKeyboardButton(
               #         text="üì£–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
                #        callback_data="Notifications_menu"
               #     )
                #)
                bot.send_message(user_id, "‚öôÔ∏è–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.\n")
                bot.send_message(user_id, "/notifications on || off - –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            else:
                bot.send_message(user_id, "‚öôÔ∏è–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.\n")
                bot.send_message(
                    user_id,
                    "/start  &lt;—Å—Å—ã–ª–∫–∞&gt; - —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞ —Å <a href='https://solutions-team.ru/'>—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π</a>",
                    parse_mode="HTML"
                )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /help: {e}")
            bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
   # @bot.callback_query_handler(func=lambda call: True)
   # def handle_message(callback):
     #   if callback.data == "Notifications_menu":
  #          try:
            #    notifications_changer.send_welcom(callback.from_user.id)
          #  except Exception as e:
           #     logging.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ Notifications_menu: {e}")
          #      bot.send_message(callback.from_user.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")
